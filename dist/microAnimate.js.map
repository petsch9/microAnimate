{"version":3,"sources":["../src/microAnimate.js"],"names":[],"mappings":"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","file":"microAnimate.js","sourcesContent":["(function(window) {\n  /*\n  *\n  Usage:\n\n  var myAnimation = new Anim(element,{\n      \"0%\": [\n        [\"width\", \"200px\"],\n        [\"color\", \"transparent\"],\n        function() {\n          console.log(\"callback 1\");\n        }\n      ],\n      \"20%\": [\n        [\"width\", \"100px\"],\n        [\"color\", \"white\"],\n        function() {\n          console.log(\"callback 2\");\n        }\n      ],\n      \"100%\": [\n        [\"width\", \"60px\"],\n        [\"color\", \"red\"],\n        function() {\n          console.log(\"callback 3\");\n        }\n      ]\n    },\n    options = {\n      duration: 2000,\n      ticklength: 30,\n      smoothing: true,\n      callbackTolerance: 2.5\n    });\n\n  *\n  */\n\n  function microAnimate(element = document.body, animation = {\n      \"0%\": [\n        [\"width\", \"200px\"],\n        [\"color\", \"transparent\"],\n        function() {\n          console.log(\"callback 1\");\n        }\n      ],\n      \"20%\": [\n        [\"width\", \"100px\"],\n        [\"color\", \"white\"],\n        function() {\n          console.log(\"callback 2\");\n        }\n      ],\n      \"100%\": [\n        [\"width\", \"60px\"],\n        [\"color\", \"red\"],\n        function() {\n          console.log(\"callback 3\");\n        }\n      ]\n    },\n    options = {\n      duration: 2000,\n      ticklength: 30,\n      smoothing: true,\n      callbackTolerance: 2.5\n    }) {\n\n\n    return new Anim(element, animation, options);\n\n  }\n\n  var Anim = function(element, animation, options) {\n    //Clone Arguments to Anim\n    this.element = element,\n      this.animation = prepareObject(animation),\n      this.opt = options,\n      this.opt.totalTicks = options.duration / options.ticklength,\n      this.interval = window.setInterval(function() {}, 1000),\n      this.animMap = mapAnimation(this.animation, this.opt.totalTicks),\n      this.callbacks = mapCallbacks(this.animation, this.opt.totalTicks);\n\n    if (this.opt.smoothing) {\n      this.transition = generateSmoothing(this.animMap);\n    }\n\n\n\n\n    //The Animation get calculated before it gets executed for better performance\n    //Creates Array with the styles\n    /*Output example:\n\n    animMap = [\n      [\"width\", [\"0px\", \"1px\", \"2px\"]],\n      [\"color\", [\"#ffffff\", \"#eeeeee\", \"#dddddd\"]],\n    ]\n\n    */\n    function mapAnimation(animation) {\n      //Prepare Animation given\n      var obj = animation,\n        animMap = [],\n        mappedProperties = [],\n        lastIndex = 0;\n\n      //Go from 0% to 100%\n      for (var i = 0; i <= 100; i++) {\n        //Check the latest given timestamp\n        if (typeof obj[i] !== \"undefined\") {\n          lastIndex = i;\n        }\n\n        //Map each property of the current timestamp\n        obj[lastIndex].forEach(insertMap);\n\n      }\n      console.log(animMap);\n\n      return animMap;\n\n\n\n\n\n      function insertMap(value, index) {\n        //Make sure the callbacks dont get mapped\n        if (typeof value !== \"function\") {\n\n          //Check if there already is a mapping for this property\n          if (mappedProperties.indexOf(value[0]) === -1) {\n            //Map for checking future properties\n            mappedProperties.push(value[0]);\n            //init the property in the animMap Array\n            animMap.push([value[0],\n              [value[1]]\n            ]);\n\n          }\n          //Else push the value\n          else {\n            var prop = value[0],\n              val = value[1],\n              type=propertyType(prop,val);\n\n            //Acess the animMap by looking up the index in the mappedProperties Array and hoping its the same\n            animMap[mappedProperties.indexOf(value[0])][1].push(value[1]);\n          }\n        }\n\n        //Check if a property can be animated\n        function propertyType(property) {\n          var result,\n          testPx=new RegExp(\"[0-9]+px\");\n        }\n      }\n\n\n    }\n\n\n\n\n\n\n    //Push Callbacks into Array\n    function mapCallbacks(animation) {\n      var result = [];\n      console.log(animation);\n\n      Object.keys(animation).forEach(function(val) {\n        animation[val].forEach(function(val2) {\n          if (typeof val2 == \"function\") {\n            result[val] = val2;\n          }\n        });\n      });\n\n      return result;\n    }\n\n\n    //Sort and format Animation object\n    function prepareObject(object) {\n      var keys = Object.keys(object),\n        optimizedKeys = [],\n        result = {};\n\n      //Go over keys and replace \"from\" and \"to\"\n      keys.forEach(function(keyName) {\n        if (keyName === \"from\") {\n          object[\"0%\"] = object[keyName];\n          delete object[keyName];\n        } else if (keyName === \"to\") {\n          object[\"100%\"] = object[keyName];\n          delete object[keyName];\n        }\n      });\n\n\n      //Sort Keys in a new Array (we need to \".keys() \" again because we modiefied the keys before)\n      optimizedKeys = Object.keys(object);\n      optimizedKeys.forEach(function(keyName, index) {\n        optimizedKeys[index] = parseInt(keyName.replace(\"%\", \"\"));\n      });\n      optimizedKeys.sort();\n\n\n\n      //Sort Object\n      optimizedKeys.forEach(function(keyName) {\n        result[keyName] = object[keyName + \"%\"];\n      });\n\n\n\n      return result;\n    }\n\n    //Generate CSS transition from map\n    function generateSmoothing(map) {\n      var val = [];\n\n      //console.log(val.join(\", \"));\n      return val.join(\", \");\n    }\n\n  };\n\n  Anim.prototype.start = function() {\n\n    console.log(this);\n    var ticker = 0,\n      relativePercentage = 0,\n      //Cache variables that wouldnt be available to the loop otherwise\n      self = this,\n      callbackList = [];\n\n\n    //Set to first frame before smoothing\n    animate(self.element, self.animMap, 0);\n    //Enable CSS Based Animation Smoothing\n    if (self.opt.smoothing) {\n      self.element.style.transition = self.transition;\n    }\n\n\n    //Main Animation Loop\n    self.interval = window.setInterval(function() {\n\n      ticker++;\n      relativePercentage = Math.round((100 / self.opt.totalTicks) * ticker);\n      //Roof at 100\n      relativePercentage = relativePercentage < 100 | 100;\n\n      //Animate\n      animate(self.element, self.animMap, relativePercentage);\n\n      //Remove the interval if over 100% else Animate\n      if (ticker > self.opt.totalTicks) {\n        killAnim();\n      }\n\n\n      //Callback and return list with the ones which were executed\n      callbackList = checkCallbacks(self.callbacks, callbackList, relativePercentage, self.opt.callbackTolerance, self.opt.totalTicks);\n\n\n    }, self.opt.ticklength);\n\n\n\n    //Apply all styles for the current Frame\n    function animate(element, map, percentage) {\n      map.forEach(function(val, index) {\n        if (typeof val[1][percentage] !== \"undefined\") {\n          console.log(percentage + \": \" + val[0] + \"=\" + val[1][percentage]);\n          element.style[val[0]] = val[1][percentage];\n        }\n      });\n    }\n\n    //Check if any callbacks need to be run\n    function checkCallbacks(callbacks, previousCallbacks, percentage, tolerance, totalTicks) {\n      var relativeTolerance = Math.round(tolerance * 100 / totalTicks),\n        result = previousCallbacks;\n\n      //Test if a callback exist from percentage - tolererance to percentage + tolererance\n      for (var i = percentage - relativeTolerance, max = percentage + relativeTolerance; i <= max; i++) {\n        //Only execute if it exists and it hasnt been executed before\n        if (callbacks[i] && previousCallbacks.indexOf(callbacks[i]) === -1) {\n          callbacks[i](self);\n          result.push(callbacks[i]);\n        }\n      }\n\n      return result;\n    }\n\n\n    function killAnim() {\n      window.clearInterval(self.interval);\n    }\n  };\n\n  Anim.prototype.pause = function() {\n    window.setInterval(this, Infinity);\n  };\n  Anim.prototype.stop = function() {\n    window.clearInterval(self.interval);\n  };\n\n\n\n  //Export microAnimate to global scope\n  window.microAnimate = microAnimate;\n  //Exports shorter\n  window.Anim = microAnimate;\n\n})(window);\n"]}