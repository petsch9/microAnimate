{"version":3,"sources":["../src/microAnimate.js"],"names":[],"mappings":";;;;AAAA,CAAC,UAAS,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqChB,WAAS,YAAY,GASnB;QARA,OAAO,yDAAG,QAAQ,CAAC,IAAI;QACvB,SAAS,yDAAG,EAAE;QACd,OAAO,yDAAG;AACR,cAAQ,EAAE,IAAI;AACd,gBAAU,EAAE,EAAE;AACd,eAAS,EAAE,IAAI;AACf,UAAI,EAAE,KAAK;KACZ;;AAID,WAAO,IAAI,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;GAE9C;;AAED,MAAI,IAAI,GAAG,SAAP,IAAI,CAAY,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE;;AAE/C,QAAI,CAAC,OAAO,GAAG,OAAO,EACpB,IAAI,CAAC,OAAO,GAAG,OAAO,EACtB,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,UAAU,EAC/D,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EACzE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;AAEvB,QAAI,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,KAAK,CAAC,EAAE;AACtC,aAAO,CAAC,IAAI,CAAC,8BAA8B,GAAG,OAAO,CAAC,UAAU,GAAG,kCAAkC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1H,aAAO,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAC;AAChE,aAAO,CAAC,IAAI,CAAC,sEAAsE,CAAC,CAAC;KACtF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAsCD,aAAS,gBAAgB,CAAC,SAAS,EAAE,OAAO,EAAE;AAC5C,UAAI,MAAM,GAAG,EAAE;UACb,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;;;AAAC,AAGpC,cAAQ,CAAC,OAAO,CAAC,UAAS,GAAG,EAAE,KAAK,EAAE;;AAEpC,YAAI,MAAM,GAAG,UAAU,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AACtC,cAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;;AAEpB,cAAM,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AACrD,cAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,GAAG,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;;AAEtD,YAAI,OAAO,CAAC,SAAS,EAAE;AACrB,gBAAM,CAAC,MAAM,CAAC,CAAC,UAAU,GAAG,aAAa,CAAC,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;SAChF;OACF,CAAC,CAAC;;AAGH,aAAO,MAAM;;;;;;AAAC,AAOd,eAAS,YAAY,CAAC,SAAS,EAAE;AAC/B,YAAI,MAAM,GAAG,EAAE,CAAC;AAChB,iBAAS,CAAC,OAAO,CAAC,UAAS,KAAK,EAAE;AAChC,cAAI,QAAO,KAAK,yCAAL,KAAK,OAAK,QAAQ,EAAE;AAC7B,kBAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;WACpB;SACF,CAAC,CAAC;AACH,eAAO,MAAM,CAAC;OACf;;AAGD,eAAS,WAAW,CAAC,SAAS,EAAE;AAC9B,YAAI,MAAM,CAAC;AACX,iBAAS,CAAC,OAAO,CAAC,UAAS,EAAE,EAAE;AAC7B,cAAI,OAAO,EAAE,KAAK,UAAU,EAAE;AAC5B,kBAAM,GAAG,EAAE,CAAC;WACb;SACF,CAAC,CAAC;AACH,eAAO,MAAM,CAAC;OACf;;AAED,eAAS,aAAa,CAAC,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;;AAEzD,YAAI,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE;;AAG5B,cAAI,MAAM,GAAG,EAAE;;;AAEb,kBAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;;;AAExC,wBAAc,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAA,AAAC,GAAG,GAAG;;;AAEjF,aAAG,GAAG,EAAE;;;AAAC,AAIX,cAAI,OAAO,CAAC,IAAI,KAAK,IAAI,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC7D,gBAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AACpC,iBAAG,GAAG,OAAO,CAAC,IAAI,CAAC;aACpB,MAAM;AACL,iBAAG,GAAG,MAAM,CAAC;aACd;WACF;;AAGD,mBAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,UAAS,KAAK,EAAE,CAAC,EAAE;AACnD,gBAAI,QAAO,KAAK,yCAAL,KAAK,OAAK,QAAQ,EAAE;AAC7B,kBAAI,KAAK,CAAC;;AAEV,kBAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;;AAEnC,qBAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,cAAc,GAAG,GAAG,GAAG,GAAG,CAAC;eAC3D,MAAM;AACL,qBAAK,GAAG,EAAE,CAAC;eACZ;;AAED,oBAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACpB;WACF,CAAC,CAAC;;AAEH,iBAAO,MAAM,CAAC;SACf;OACF;;;AAAA,AAGD,eAAS,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE;AAChC,YAAI,MAAM;;AAAC,AAEX,YAAI,GAAG,KAAK,CAAC,EAAE;;AAEb,gBAAM,GAAG,IAAI,CAAC,KAAK,CACjB,IAAI,CAAC,KAAK,CAAC,AAAC,GAAG,GAAG,GAAG,GAAI,OAAO,CAAC,UAAU,CAAC,IAC3C,GAAG,GAAG,OAAO,CAAC,UAAU,CAAA,AAAC,CAC3B,CAAC;AACF,cAAI,MAAM,GAAG,GAAG,EAAE;AAChB,kBAAM,GAAG,GAAG,CAAC;WACd;SACF;AACD,eAAO,MAAM,CAAC;OACf;KAEF;;;;;;;;;;AAAA,AAUD,aAAS,aAAa,CAAC,MAAM,EAAE;AAC7B,UAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;UAC5B,aAAa,GAAG,EAAE;UAClB,MAAM,GAAG,EAAE;;;AAAC,AAGd,UAAI,CAAC,OAAO,CAAC,UAAS,OAAO,EAAE;AAC7B,YAAI,OAAO,KAAK,MAAM,EAAE;AACtB,gBAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AAC/B,iBAAO,MAAM,CAAC,OAAO,CAAC,CAAC;SACxB,MAAM,IAAI,OAAO,KAAK,IAAI,EAAE;AAC3B,gBAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AACjC,iBAAO,MAAM,CAAC,OAAO,CAAC,CAAC;SACxB;OACF,CAAC;;;AAAC,AAIH,mBAAa,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC,mBAAa,CAAC,OAAO,CAAC,UAAS,OAAO,EAAE,KAAK,EAAE;AAC7C,qBAAa,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;OAC3D,CAAC,CAAC;AACH,mBAAa,CAAC,IAAI,EAAE;;;AAAC,AAGrB,mBAAa,CAAC,OAAO,CAAC,UAAS,OAAO,EAAE;AACtC,cAAM,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC;OACzC,CAAC,CAAC;;AAEH,aAAO,MAAM,CAAC;KACf;GAEF;;;;;;AAAC,AAOF,MAAI,CAAC,SAAS,CAAC,KAAK,GAAG,YAAW;;AAEhC,WAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClB,QAAI,MAAM,GAAG,CAAC;QACZ,kBAAkB,GAAG,CAAC;;;AAEtB,QAAI,GAAG,IAAI;;;AAEX,qBAAiB,GAAG,EAAE;;;AAAC,AAIzB,WAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAChD,cAAU,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;;;AAAC,AAIvD,QAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,YAAW;AAC5C,wBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,AAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,GAAI,MAAM,CAAC;;AAAC,AAE1E,UAAI,kBAAkB,GAAG,GAAG,EAAE;AAC5B,0BAAkB,GAAG,GAAG,CAAC;OAC1B;AACD,aAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,kBAAkB,GAAG,GAAG,CAAC;;;AAAC,AAI/D,UAAI,OAAO,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,KAAK,WAAW,EAAE;AAC7D,eAAO,CACL,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAC1C,CAAC;AACF,kBAAU,CACR,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAC9C,CAAC;AACF,gBAAQ,CACN,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,QAAQ,EAC3C,IAAI,CACL,CAAC;OACH;;;AAAA,AAGD,UAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;AACpC,gBAAQ,EAAE,CAAC;OACZ;;AAGD,YAAM,EAAE,CAAC;KACV,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;;;AAAC,AAK5B,aAAS,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE;;;;;AAKhC,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtC,eAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;OAC5C;KACF;;;AAAA,AAGD,aAAS,UAAU,CAAC,OAAO,EAAE,WAAW,EAAE;AACxC,UAAI,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,OAAO,WAAW,KAAK,WAAW,EAAE;AAChE,eAAO,CAAC,KAAK,CAAC,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;OAClD;KACF;;;AAAA,AAGD,aAAS,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE;AACnC,UAAI,OAAO,SAAS,KAAK,UAAU,IAAI,iBAAiB,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;AAClF,iBAAS,CAAC,MAAM,CAAC,CAAC;AAClB,yBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;OACnC;KACF;;AAGD,aAAS,QAAQ,GAAG;AAClB,YAAM,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACrC;GACF,CAAC;;AAEF,MAAI,CAAC,SAAS,CAAC,KAAK,GAAG,YAAW;AAChC,UAAM,CAAC,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;GACpC,CAAC;;AAEF,MAAI,CAAC,SAAS,CAAC,IAAI,GAAG,YAAW;AAC/B,UAAM,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;GACrC;;;AAAC,AAKF,QAAM,CAAC,YAAY,GAAG,YAAY;;AAAC,AAEnC,QAAM,CAAC,IAAI,GAAG,YAAY,CAAC;CAE5B,CAAA,CAAE,MAAM,CAAC,CAAC","file":"microAnimate.js","sourcesContent":["(function(window) {\n  /*\n  * Usage:\n\n  var myAnimation = new Anim(element,{\n      \"0%\": [\n        [\"width\", \"200px\"],\n        [\"color\", \"transparent\"],\n        function() {\n          console.log(\"callback 1\");\n        }\n      ],\n      \"20%\": [\n        [\"width\", \"100px\"],\n        [\"color\", \"white\"],\n        function() {\n          console.log(\"callback 2\");\n        }\n      ],\n      \"100%\": [\n        [\"width\", \"60px\"],\n        [\"color\", \"red\"],\n        function() {\n          console.log(\"callback 3\");\n        }\n      ]\n    },\n    options = {\n      duration: 2000,\n      ticklength: 30,\n      smoothing: true,\n      callbackTolerance: 2.5\n    });\n\n  *\n  */\n\n  function microAnimate(\n    element = document.body,\n    animation = {},\n    options = {\n      duration: 2000,\n      ticklength: 30,\n      smoothing: true,\n      ease: false\n    }\n  ) {\n\n\n    return new Anim(element, animation, options);\n\n  }\n\n  var Anim = function(element, animation, options) {\n    //Clone Arguments to Anim\n    this.element = element,\n      this.options = options,\n      this.options.totalTicks = options.duration / options.ticklength,\n      this.animation = processAnimation(prepareObject(animation), this.options),\n      this.interval = null;\n\n    if (this.options.totalTicks % 10 !== 0) {\n      console.info(\"The ticklength you provided(\" + options.ticklength + \") doesn't fit into the duration \" + options.duration);\n      console.info(\"This might cause issues, but you should be fine\");\n      console.info(\"To avoid this make sure the duration is a multiple of the ticklength\");\n    }\n\n\n    /*The Animation get calculated before it gets executed for better performance\n    * Result looks like this:\n\n    {\n      0: {\n        styles: [\n          [\"width\", \"100px\"],\n          [\"color\", \"red\"]\n        ]\n        transition: [\"width 2s\", \"color 2s\"]\n        callback: callback1()\n      },\n      20: {\n        styles: [\n          [\"width\", \"20px\"],\n          [\"color\", \"blue\"]\n        ]\n        transition: [\"width 6s\", \"color 6s\"]\n        callback: callback2()\n      },\n      100: {\n        styles: [\n          [\"width\", \"400px\"],\n          [\"color\", \"gree\"]\n        ]\n        transition: []\n        callback: callback3()\n      }\n    }\n\n    *\n    */\n\n\n    //Generate Style, Transition and Callbacks from the animation property\n    function processAnimation(animation, options) {\n      var result = {},\n        animKeys = Object.keys(animation);\n\n      //Go over each percentage given\n      animKeys.forEach(function(key, index) {\n        //Generates a new key to fit certain intervals\n        var newKey = dynamicKey(key, options);\n        result[newKey] = {};\n\n        result[newKey].styles = mapAnimation(animation[key]);\n        result[newKey].callback = mapCallback(animation[key]);\n\n        if (options.smoothing) {\n          result[newKey].transition = mapTransition(animation, index, animKeys, options);\n        }\n      });\n\n\n      return result;\n\n\n      /*\n       * Mapping Sub-functions\n       */\n\n      function mapAnimation(animation) {\n        var result = [];\n        animation.forEach(function(style) {\n          if (typeof style === \"object\") {\n            result.push(style);\n          }\n        });\n        return result;\n      }\n\n\n      function mapCallback(animation) {\n        var result;\n        animation.forEach(function(fn) {\n          if (typeof fn === \"function\") {\n            result = fn;\n          }\n        });\n        return result;\n      }\n\n      function mapTransition(animation, index, allKeys, options) {\n        //Only try to create a transition if the Animation isnt finished yet\n        if (allKeys[index] !== \"100\") {\n\n\n          var result = [],\n            //The next key of the Animation\n            nextAnim = animation[allKeys[index + 1]],\n            //Time between the current and the next key\n            timeDifference = options.totalTicks / (allKeys[index + 1] - allKeys[index]) + \"s\",\n            //Additional transition values, \"ease\" for example\n            add = \"\";\n\n\n          //Ease if easing is enabled (either default or given easing)\n          if (options.ease === true || typeof options.ease === \"string\") {\n            if (typeof options.ease === \"string\") {\n              add = options.ease;\n            } else {\n              add = \"ease\";\n            }\n          }\n\n\n          animation[allKeys[index]].forEach(function(style, i) {\n            if (typeof style === \"object\") {\n              var trans;\n\n              if (typeof nextAnim !== \"undefined\") {\n                //Transition String\n                trans = nextAnim[i][0] + \" \" + timeDifference + \" \" + add;\n              } else {\n                trans = \"\";\n              }\n\n              result.push(trans);\n            }\n          });\n\n          return result;\n        }\n      }\n\n      //Change keys to fit strange intervals\n      function dynamicKey(key, options) {\n        var result;\n        //if Key is Zero, dont change!\n        if (key !== 0) {\n          //Smooth key to fit current interval\n          result = Math.round(\n            Math.round((key / 100) * options.totalTicks) *\n            (100 / options.totalTicks)\n          );\n          if (result > 100) {\n            result = 100;\n          }\n        }\n        return result;\n      }\n\n    }\n\n    /*Sort and format Animation object\n     *\n     * + Converts \"from\" to \"0\" and \"to\" to \"100\"\n     * + converts \"100\" to 100\n     * + fixes unreachable percentages\n     *\n     */\n\n    function prepareObject(object) {\n      var keys = Object.keys(object),\n        optimizedKeys = [],\n        result = {};\n\n      //Go over keys and replace \"from\" and \"to\"\n      keys.forEach(function(keyName) {\n        if (keyName === \"from\") {\n          object[\"0%\"] = object[keyName];\n          delete object[keyName];\n        } else if (keyName === \"to\") {\n          object[\"100%\"] = object[keyName];\n          delete object[keyName];\n        }\n      });\n\n\n      //Sort Keys in a new Array (we need to \".keys() \" again because we modiefied the keys before)\n      optimizedKeys = Object.keys(object);\n      optimizedKeys.forEach(function(keyName, index) {\n        optimizedKeys[index] = parseInt(keyName.replace(\"%\", \"\"));\n      });\n      optimizedKeys.sort();\n\n      //Sort Object\n      optimizedKeys.forEach(function(keyName) {\n        result[keyName] = object[keyName + \"%\"];\n      });\n\n      return result;\n    }\n\n  };\n\n\n  /*\n   * Animation methods\n   */\n\n  Anim.prototype.start = function() {\n\n    console.log(this);\n    var ticker = 0,\n      relativePercentage = 0,\n      //Cache variables that wouldnt be available to the loop otherwise\n      self = this,\n      //All executed callbacks are index to make sure callbacks dont execute twice\n      finishedCallbacks = [];\n\n\n    //Set to first frame before starting to avoid glitching\n    animate(self.element, self.animation[0].styles);\n    transition(self.element, self.animation[0].transition);\n\n\n    //Main Animation Loop\n    self.interval = window.setInterval(function() {\n      relativePercentage = Math.round((100 / self.options.totalTicks) * ticker);\n      //Roof at 100\n      if (relativePercentage > 100) {\n        relativePercentage = 100;\n      }\n      console.log(\"Animation Progress: \" + relativePercentage + \"%\");\n\n\n      //Animate if there is data for the current percentage\n      if (typeof self.animation[relativePercentage] !== \"undefined\") {\n        animate(\n          self.element,\n          self.animation[relativePercentage].styles\n        );\n        transition(\n          self.element,\n          self.animation[relativePercentage].transition\n        );\n        callback(\n          self.animation[relativePercentage].callback,\n          self\n        );\n      }\n\n      //Remove the interval if over 100% else Animate\n      if (ticker > self.options.totalTicks) {\n        killAnim();\n      }\n\n\n      ticker++;\n    }, self.options.ticklength);\n\n\n\n    //Apply all styles for the current Frame\n    function animate(element, styles) {\n      //forEach has sucky performance, we shouldnt use it in the loop\n      /*styles.forEach(function(val, index) {\n        element.style[val[0]] = val[1];\n      });*/\n      for (var i = 0; i < styles.length; i++) {\n        element.style[styles[i][0]] = styles[i][1];\n      }\n    }\n\n    //Run Transitions if needed\n    function transition(element, transitions) {\n      if (self.options.smoothing && typeof transitions !== \"undefined\") {\n        element.style.transition = transitions.join(\",\");\n      }\n    }\n\n    //Check if any callbacks need to be run\n    function callback(callbacks, target) {\n      if (typeof callbacks === \"function\" && finishedCallbacks.indexOf(callbacks) === -1) {\n        callbacks(target);\n        finishedCallbacks.push(callbacks);\n      }\n    }\n\n\n    function killAnim() {\n      window.clearInterval(self.interval);\n    }\n  };\n\n  Anim.prototype.pause = function() {\n    window.setInterval(this, Infinity);\n  };\n\n  Anim.prototype.stop = function() {\n    window.clearInterval(this.interval);\n  };\n\n\n\n  //Export microAnimate to global scope\n  window.microAnimate = microAnimate;\n  //Exports shorter\n  window.Anim = microAnimate;\n\n})(window);\n"]}