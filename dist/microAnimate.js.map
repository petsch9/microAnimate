{"version":3,"sources":["../src/microAnimate.js"],"names":[],"mappings":"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","file":"microAnimate.js","sourcesContent":["(function(window) {\r\n  //For better compression\r\n  let microAnimate = function(\r\n    element,\r\n    animation = {},\r\n    options = {\r\n      duration: 2000,\r\n      ease: true,\r\n      retainEndState: true,\r\n      loop: 0\r\n    }\r\n  ) {\r\n    //Process the Animation/Options and store them\r\n    this.element = element;\r\n    this.options = options;\r\n    //Constants\r\n    this.data = {\r\n      //Ticklength constant (default: 16)\r\n      ticklength: 16,\r\n      //Action can be: 0=nothing, 1=pause or 2=unpause\r\n      action: 0\r\n    };\r\n    this.data.ticks = Math.ceil(options.duration / this.data.ticklength);\r\n    this.animation = processAnimation(\r\n      preprocessAnimation(animation),\r\n      this.data,\r\n      this.options\r\n    );\r\n    this.interval = null;\r\n\r\n\r\n\r\n    /*The Animation gets calculated before when constructed for better performance\r\n     * Generate Style, Transition and Callbacks from the animation property\r\n     */\r\n    function processAnimation(animation, data, options) {\r\n      let result = {\r\n        initial: {},\r\n        index: Object.keys(animation)\r\n      };\r\n\r\n\r\n      //Initial State\r\n      result.initial.styles = mapAnimation(animation[0], animation[0]);\r\n\r\n      //Go over each percentage given\r\n      result.index.forEach((key, index) => {\r\n        result[key] = {};\r\n\r\n        //The next key of the Animation\r\n        const animationNext = animation[result.index[index + 1]],\r\n          //Time between the current and the next key (or the two before if not given)\r\n          timeDifference =\r\n          (((options.duration * (result.index[index] - result.index[index - 1]) / 100) / 1000) ||\r\n            0) + \"s\";\r\n\r\n        result[key].styles = mapAnimation(animation[key]);\r\n        result[key].transition = mapTransition(animation[key], timeDifference, options.ease);\r\n        result[key].callback = mapCallback(animation[key]);\r\n      });\r\n\r\n      return result;\r\n\r\n\r\n\r\n      /*\r\n       * Mapping Sub-functions\r\n       */\r\n\r\n      //Maps Animation\r\n      function mapAnimation(animation) {\r\n        let result = [];\r\n\r\n        //Iterate over styles\r\n        animation.forEach(style => {\r\n          if (typeof style === \"object\") {\r\n            result.push(style);\r\n          }\r\n        });\r\n        return result;\r\n      }\r\n\r\n\r\n\r\n      //Maps Transitions\r\n      function mapTransition(animation, timeDifference, ease) {\r\n        let result = [],\r\n          //Additional transition values like \"ease\"\r\n          add = \"\";\r\n\r\n        //Ease if easing is enabled (either default or given easing)\r\n        if (ease === true || typeof ease === \"string\") {\r\n          if (typeof ease === \"string\") {\r\n            //if a string is given, use the string\r\n            add = \" \" + ease;\r\n          } else {\r\n              //if a true is given, use default easing\r\n            add = \" ease\";\r\n          }\r\n        }else{\r\n          //if a false is given, use no easing\r\n          add = \" linear\";\r\n        }\r\n\r\n        //Iterate over styles\r\n        animation.forEach((style, index) => {\r\n          if (typeof style === \"object\") {\r\n            let transition;\r\n\r\n            //Transition String\r\n            if (typeof animation !== \"undefined\") {\r\n              //Generate CSS transition\r\n              transition = animation[index][0] + \" \" + timeDifference + add;\r\n            } else {\r\n              transition = \"\";\r\n            }\r\n            result.push(transition);\r\n\r\n          }\r\n        });\r\n\r\n        return result;\r\n      }\r\n\r\n\r\n      //Maps Callbacks\r\n      function mapCallback(animation) {\r\n        let result;\r\n\r\n        //Iterate over callbacks\r\n        animation.forEach(fn => {\r\n          if (typeof fn === \"function\") {\r\n            result = fn;\r\n          }\r\n        });\r\n        return result;\r\n      }\r\n\r\n    }\r\n\r\n    /* Sort and format Animation object\r\n     *\r\n     * + Converts \"from\" to \"0\" and \"to\" to \"100\"\r\n     * + converts \"100\" to 100 etc.\r\n     *\r\n     */\r\n    function preprocessAnimation(animation) {\r\n      let optimizedKeys = [],\r\n        result = {};\r\n\r\n      //Go over keys and replace \"from\" and \"to\"\r\n      Object.keys(animation).forEach(keyName => {\r\n        if (keyName === \"from\") {\r\n          animation[\"0%\"] = animation[keyName];\r\n          delete animation[keyName];\r\n        } else if (keyName === \"to\") {\r\n          animation[\"100%\"] = animation[keyName];\r\n          delete animation[keyName];\r\n        }\r\n      });\r\n\r\n\r\n      //Sort Keys in a new Array (we need to \".keys() \" again because we modified the keys before)\r\n      optimizedKeys = Object.keys(animation);\r\n      optimizedKeys.forEach((keyName, index) => {\r\n        optimizedKeys[index] = parseInt(keyName.replace(\"%\", \"\"));\r\n      });\r\n      optimizedKeys.sort();\r\n\r\n      //Sort Object\r\n      optimizedKeys.forEach(keyName => {\r\n        result[keyName] = animation[keyName + \"%\"];\r\n      });\r\n\r\n\r\n      return result;\r\n    }\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Animation methods\r\n   */\r\n\r\n  //Main Animation play-method\r\n  microAnimate.prototype.start = function() {\r\n    //Reset if the Animation is called while its already running\r\n    if(this.interval!==null){\r\n      animationKill.apply(this,[true]);\r\n    }\r\n\r\n    let _self = this,\r\n      animationBuffer = _self.animation,\r\n      tick,\r\n      relativePercentage,\r\n      indexMin,\r\n      indexList,\r\n      //Loop object that stores the current and the maximum iterations\r\n      loop = {\r\n        current: 1,\r\n        max: (typeof this.options.loop === \"boolean\" ? (\r\n          this.options.loop ? Infinity : 0\r\n        ) : this.options.loop)\r\n      };\r\n\r\n    //Reset Element\r\n    elementReset(_self.element);\r\n    animationReset();\r\n\r\n    //Start the animation\r\n    animationLoop(_self);\r\n\r\n\r\n    //Main Animation Interval\r\n    function animationLoop() {\r\n      relativePercentage = Math.round((100 / _self.data.ticks) * tick);\r\n\r\n      //Remove the interval if over 100% else Animate\r\n      if (indexList.length === 0) {\r\n        //Check if given loops have been run and if the animation an be terminated\r\n        if (loop.current < loop.max) {\r\n          elementReset(_self.element);\r\n          animationReset();\r\n          loop.current++;\r\n          animationLoop();\r\n        } else {\r\n          //terminate animation\r\n          animationKill.apply(this,[false]);\r\n        }\r\n      } else {\r\n        //console.log(\"Animation Progress: \" + relativePercentage + \"%\");\r\n        //Animate if there is data for the current percentage\r\n        if (relativePercentage > indexMin) {\r\n          //Get the data of this and the next frame\r\n          let currentFrame = animationBuffer[indexMin],\r\n            nextFrame = animationBuffer[indexList[1]] || animationBuffer[0];\r\n          //Remove smallest Index and recalc\r\n          indexList.shift();\r\n          //Get smallest value of Array\r\n          indexMin = Math.min.apply(Math, indexList);\r\n\r\n\r\n          applyTransition(\r\n            _self.element,\r\n            nextFrame.transition\r\n          );\r\n          applyAnimation(\r\n            _self.element,\r\n            nextFrame.styles\r\n          );\r\n          if (typeof currentFrame.callback !== \"undefined\") {\r\n            applyCallback(\r\n              currentFrame.callback,\r\n              _self\r\n            );\r\n          }\r\n        }\r\n\r\n        tick++;\r\n        //Check if theres anything to do before going to the next frame (pausing etc.)\r\n        if (_self.data.action === 0) {\r\n          //Ooooor everything is nice and quiet, and we can continue our animation\r\n          _self.interval = window.setTimeout(() => {\r\n            window.requestAnimationFrame(animationLoop);\r\n          }, _self.data.ticklength);\r\n        } else if (_self.data.action === 1) {\r\n          //Pause Controller\r\n          //Wait for unpause\r\n          animationPause();\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    /*\r\n     * Sub-functions used in the active Animation\r\n     */\r\n\r\n    //Apply all styles for the current Frame\r\n    function applyAnimation(element, styles) {\r\n      if (typeof styles !== \"undefined\") {\r\n        for (let i = 0; i < styles.length; i++) {\r\n          element.style[styles[i][0]] = styles[i][1];\r\n        }\r\n      }\r\n    }\r\n\r\n    //Run Transitions if needed\r\n    function applyTransition(element, transitions) {\r\n      if (typeof transitions !== \"undefined\") {\r\n        element.style.transition = transitions.join(\", \");\r\n      }\r\n    }\r\n\r\n    //Check if any callbacks need to be run\r\n    function applyCallback(callback, context) {\r\n      callback(context);\r\n    }\r\n\r\n    //Reset animation\r\n    function animationReset() {\r\n      tick = 0;\r\n      relativePercentage = 0;\r\n      indexMin = 0;\r\n      indexList = Array.from(animationBuffer.index);\r\n      _self.data.action = 0;\r\n\r\n      applyAnimation(\r\n        _self.element,\r\n        animationBuffer.initial.styles\r\n      );\r\n    }\r\n\r\n\r\n    function animationPause() {\r\n      _self.interval = window.setInterval(() => {\r\n        if (_self.data.action === 2) {\r\n          //Yay we can continue\r\n          _self.data.action = 0;\r\n          window.clearInterval(_self.interval);\r\n          window.requestAnimationFrame(animationLoop);\r\n        }\r\n      }, _self.data.ticklength * 2);\r\n    }\r\n\r\n  };\r\n\r\n  //Pause Animation\r\n  microAnimate.prototype.pause = function() {\r\n    this.data.action = 1;\r\n  };\r\n  //Resume paused Animation\r\n  microAnimate.prototype.unpause = function() {\r\n    if (this.data.action === 1) {\r\n      this.data.action = 2;\r\n    }\r\n  };\r\n\r\n  //Stop & Reset Animation\r\n  microAnimate.prototype.stop = function() {\r\n    animationKill.apply(this,[true]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Internal functions\r\n   */\r\n\r\n  //Resets the element to its default style\r\n  function elementReset(element) {\r\n    //Kind of rough but it works\r\n    element.style.cssText = \"\";\r\n  }\r\n\r\n  //Clear Animation\r\n  function animationKill(forceReset) {\r\n    console.log(this);\r\n    window.clearInterval(this.interval);\r\n    this.interval=null;\r\n    if (!this.options.retainEndState || forceReset) {\r\n      elementReset(this.element);\r\n    }\r\n  }\r\n\r\n\r\n  //Export full namespace to global scope\r\n  window.microAnimate = microAnimate;\r\n  //Exports shorter namespace\r\n  window.Anim = microAnimate;\r\n\r\n})(window);\r\n"]}