{"version":3,"sources":["../src/microAnimate.js"],"names":[],"mappings":"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","file":"microAnimate.js","sourcesContent":["(function(window) {\n  //For better compression\n  let microAnimate = function(\n    element,\n    animation = {},\n    options = {\n      duration: 2000,\n      ease: true,\n      retainEndState: true,\n      loop: 0\n    }\n  ) {\n    //Process the Animation/Options and store them in \"this\"\n    this.element = element;\n    this.options = options;\n    //Constants\n    this.data = {\n      //Ticklength constant (default: 30)\n      ticklength: 16,\n      //Action, can be: 0=nothing, 1=pause or 2=unpause\n      action: 0\n    };\n    this.data.ticks = Math.ceil(options.duration / this.data.ticklength);\n    this.animation = processAnimation(\n      preprocessAnimation(animation),\n      this.data,\n      this.options\n    );\n    this.interval = null;\n\n\n\n    /*The Animation get calculated before it gets executed for better performance\n     * Generate Style, Transition and Callbacks from the animation property\n     */\n    function processAnimation(animation, data, options) {\n      let result = {\n          initial: {},\n          index: Object.keys(animation)\n        };\n\n\n      //Initial State\n      result.initial.styles = mapAnimation(animation[0], animation[0]);\n\n      //Go over each percentage given\n      result.index.forEach((key, index) => {\n        result.index.push(key);\n        result[key] = {};\n\n        //The next key of the Animation\n        const animationNext = animation[result.index[index + 1]],\n          //Time between the current and the next key\n          timeDifference = ((\n            (options.duration * (result.index[index + 1] - result.index[index]) / 100) / 1000\n          ) || 0) + \"s\";\n\n        result[key].styles = mapAnimation(animation[key]);\n        result[key].transition = mapTransition(animation[key], timeDifference, options.ease);\n        result[key].callback = mapCallback(animation[key]);\n      });\n\n      return result;\n\n\n      /*\n       * Mapping Sub-functions\n       */\n\n      //Maps Animation\n      function mapAnimation(animation) {\n        let result = [];\n\n        animation.forEach((style) => {\n          if (typeof style === \"object\") {\n            result.push(style);\n          }\n        });\n        return result;\n      }\n\n\n\n      //Maps Transitions\n      function mapTransition(animation, timeDifference, ease) {\n        let result = [],\n          //Additional transition values like \"ease\"\n          add = \"\";\n\n        //Ease if easing is enabled (either default or given easing)\n        if (ease === true || typeof ease === \"string\") {\n          if (typeof ease === \"string\") {\n            add = \" \" + ease;\n          } else {\n            add = \" ease\";\n          }\n        }\n\n\n        animation.forEach((style, index) => {\n          if (typeof style === \"object\") {\n            let transition;\n\n            //Transition String\n            if (typeof animation !== \"undefined\") {\n\n              transition = animation[index][0] + \" \" + timeDifference + add;\n            } else {\n              transition = \"\";\n            }\n            result.push(transition);\n\n          }\n        });\n\n        return result;\n      }\n\n\n      //Maps Callbacks\n      function mapCallback(animation) {\n        let result;\n\n        animation.forEach((fn) => {\n          if (typeof fn === \"function\") {\n            result = fn;\n          }\n        });\n        return result;\n      }\n\n    }\n\n    /* Sort and format Animation object\n     *\n     * + Converts \"from\" to \"0\" and \"to\" to \"100\"\n     * + converts \"100\" to 100\n     * + fixes unreachable percentages\n     *\n     */\n    function preprocessAnimation(animation) {\n      let optimizedKeys = [],\n        result = {};\n\n      //Go over keys and replace \"from\" and \"to\"\n      Object.keys(animation).forEach((keyName) => {\n        if (keyName === \"from\") {\n          animation[\"0%\"] = animation[keyName];\n          delete animation[keyName];\n        } else if (keyName === \"to\") {\n          animation[\"100%\"] = animation[keyName];\n          delete animation[keyName];\n        }\n      });\n\n\n      //Sort Keys in a new Array (we need to \".keys() \" again because we modiefied the keys before)\n      optimizedKeys = Object.keys(animation);\n      optimizedKeys.forEach((keyName, index) => {\n        optimizedKeys[index] = parseInt(keyName.replace(\"%\", \"\"));\n      });\n      optimizedKeys.sort();\n\n      //Sort Object\n      optimizedKeys.forEach((keyName) => {\n        result[keyName] = animation[keyName + \"%\"];\n      });\n\n      return result;\n    }\n\n  };\n\n\n  /*\n   * Animation methods\n   */\n\n  //Main Animation play-method\n  microAnimate.prototype.start = function() {\n    let _self = this,\n    animationBuffer=_self.animation,\n      tick = 0,\n      relativePercentage = 0,\n      //All executed callbacks are indexed to make sure callbacks dont execute twice\n      finishedCallbacks = [],\n      //Loop object that stores the current and the maximum iterations\n      loop = {\n        current: 1,\n        max: (typeof this.options.loop === \"boolean\" ? (\n          this.options.loop ? Infinity : 0\n        ) : this.options.loop)\n      };\n\n\n    //Reset Element\n    elementReset(_self.element);\n    animationReset();\n\n    //Start the animation\n    animationLoop(_self);\n\n\n\n    //Main Animation Interval\n    function animationLoop() {\n      relativePercentage = Math.round((100 / _self.data.ticks) * tick);\n\n      //Remove the interval if over 100% else Animate\n      if (relativePercentage > 100) {\n        //Check if given loops have been run and if the animation an be terminated\n        if (loop.current < loop.max) {\n          elementReset(_self.element);\n          animationReset();\n          loop.current++;\n          animationLoop();\n        } else {\n          //terminate animation\n          animationKill();\n        }\n      } else {\n        console.log(\"Animation Progress: \" + relativePercentage + \"%\");\n        //Animate if there is data for the current percentage\n        //console.log(animationBuffer.index);\n        if(animationBuffer.index.indexOf((relativePercentage).toString())>-1){\n          let anim=animationBuffer.index.shift();\n\n          //console.log(relativePercentage);\n          //console.log(animationBuffer.index.shift());\n        //if (typeof animationBuffer[relativePercentage] !== \"undefined\") {\n          if (relativePercentage < 100) {\n            //Check how the next frame should look like\n            let nextFrame = animationBuffer.index[animationBuffer.index.indexOf(\n              (relativePercentage).toString()\n            ) + 1];\n            console.log(animationBuffer[nextFrame]);\n            applyTransition(\n              _self.element,\n              animationBuffer[nextFrame].transition\n            );\n            applyAnimation(\n              _self.element,\n              animationBuffer[nextFrame].styles\n            );\n          }\n          console.log(animationBuffer);\n          console.log(relativePercentage);\n          if(typeof animationBuffer[relativePercentage].callback !== \"undefined\"){\n          applyCallback(\n            animationBuffer[relativePercentage].callback,\n            _self\n          );\n        }\n        }\n\n        tick++;\n        //Check if theres anything to do before going to the next frame (pausing etc.)\n        if (_self.data.action !== 0) {\n          //Pause Controller\n          if (_self.data.action === 1) {\n            //Wait for unpause\n            _self.interval = window.setInterval(() => {\n              if (_self.data.action === 2) {\n                //Yay we can continue\n                _self.data.action = 0;\n                window.clearInterval(_self.interval);\n                window.requestAnimationFrame(animationLoop);\n              }\n            }, _self.data.ticklength * 2);\n          }\n        } else {\n          //Ooooor everything is nice and quiet, and we can continue our animation\n          _self.interval = window.setTimeout(() => {\n            window.requestAnimationFrame(animationLoop);\n          }, _self.data.ticklength);\n        }\n      }\n    }\n\n\n    /*\n     * Sub-functions used in the active Animation\n     */\n\n    //Apply all styles for the current Frame\n    function applyAnimation(element, styles) {\n      if (typeof styles !== \"undefined\") {\n        for (let i = 0; i < styles.length; i++) {\n          element.style[styles[i][0]] = styles[i][1];\n        }\n      }\n    }\n\n    //Run Transitions if needed\n    function applyTransition(element, transitions) {\n      if (typeof transitions !== \"undefined\") {\n        element.style.transition = transitions.join(\", \");\n      }\n    }\n\n    //Check if any callbacks need to be run\n    function applyCallback(callbacks, target) {\n      if (typeof callbacks === \"function\" && finishedCallbacks.indexOf(callbacks) === -1) {\n        callbacks(target);\n        finishedCallbacks.push(callbacks);\n      }\n    }\n\n\n    //Reset animation\n    function animationReset() {\n      applyAnimation(\n        _self.element,\n        animationBuffer.initial.styles\n      );\n      tick = 0;\n      finishedCallbacks = [];\n      _self.data.action = 0;\n    }\n\n    //Clear Animation\n    function animationKill() {\n      if (!_self.options.retainEndState) {\n        elementReset(_self.element);\n      }\n    }\n\n  };\n\n  //Pause Animation\n  microAnimate.prototype.pause = function() {\n    this.data.action = 1;\n  };\n  //Resume paused Animation\n  //TODO Breaks if not paused\n  microAnimate.prototype.unpause = function() {\n    this.data.action = 2;\n  };\n\n  //Stop & Reset Animation\n  microAnimate.prototype.stop = function() {\n    window.clearInterval(this.interval);\n    elementReset(this.element);\n  };\n\n\n  /*\n   * Internal functions\n   */\n\n  //Resets the element to its default style\n  function elementReset(element) {\n    //Kind of rough but it works\n    //console.log(element);\n    //  console.log(element.style);\n    //  console.log(element.style.cssText);\n    element.style.cssText = \"\";\n  }\n\n\n  //Export full namespace to global scope\n  window.microAnimate = microAnimate;\n  //Exports shorter namespace\n  window.Anim = microAnimate;\n\n})(window);\n"]}